<head><version>2.61.5</version></head>
<Axis_Internet_Camera>
  <auto_back_light>TRUE</auto_back_light>
  <auto_exposure>FALSE</auto_exposure>
  <auto_white_balance>TRUE</auto_white_balance>
  <brightness_value>5</brightness_value>
  <color_level_value>50</color_level_value>
  <compression_index>3</compression_index>
  <contrast_value>50</contrast_value>
  <exposure_value>72</exposure_value>
  <ip_address>10.24.81.11</ip_address>
  <is_active>TRUE</is_active>
  <password>root</password>
  <port>80</port>
  <resolution>2</resolution>
  <sharpness_value>51</sharpness_value>
  <username>root</username>
</Axis_Internet_Camera>
<Adaptive_Threshold>
  <channel_type>2</channel_type>
  <filter_size>25</filter_size>
  <max_threshold>255</max_threshold>
  <mean_offset>-9</mean_offset>
  <min_threshold>0</min_threshold>
</Adaptive_Threshold>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>150</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_mode>3</show_mode>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Close>
  <close_borders>FALSE</close_borders>
  <dilate_count>1</dilate_count>
  <erode_count>1</erode_count>
  <kernal_shape>4</kernal_shape>
  <restrict_dilation>FALSE</restrict_dilation>
  <symmetrical>TRUE</symmetrical>
</Close>
<Blob_Replace>
  <color_index>3</color_index>
  <fill_shape>TRUE</fill_shape>
  <order_array_on_x>FALSE</order_array_on_x>
  <order_array_on_y>FALSE</order_array_on_y>
  <overlay_image>Last</overlay_image>
  <shape_index>1</shape_index>
  <thickness>30</thickness>
</Blob_Replace>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold/>
        <create_array>1</create_array>
        <filter_id>63</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <ratio>.5</ratio>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>1</create_array>
        <filter_id>39</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold/>
      </filter>
    </tab:2>
    <tab:3>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>1</create_array>
        <filter_id>20</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab:3>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_mode>2</show_mode>
  <show_weights>TRUE</show_weights>
  <sort_array_on_x>TRUE</sort_array_on_x>
  <sort_array_on_y>TRUE</sort_array_on_y>
</Blob_Filter>
<Blob_Count/>
<Python_Program_v3x>
  <script>import rr

tab1Vertical = rr.GetArrayVariable("TAB1_VERTICAL");
tab2Horizontal = rr.GetArrayVariable("TAB2_HORIZONTAL");

Horizontal = tab2Horizontal 
Vertical = tab1Vertical

vCheck = false
hCheck = false

for v in Vertical:
#	print ('vert ', (v))
	if v &gt; .8:
		if v &lt; 1:
		  vCheck = True
		elif v &gt; 1:
			vCheck = False
	elif v &lt; .8:
		vCheck = False
		
for h in Horizontal:
#  print ('Hori ', (h))
  if h &gt; .8:
    if h &lt; 1:
       hCheck = True
    elif h &gt; .1:
      hCheck = False
  elif h &lt; .8:
    hCheck = False

HotTarget = False
if vCheck and hCheck:
    HotTarget = True
    print ('Hot Target')
else:
		HotTarget = False
		print ('Not Hot')    
rr.SetVariable("HOTTARGET", HotTarget);

</script>
  <source_mode>gui</source_mode>
  <tab_size_index>1</tab_size_index>
</Python_Program_v3x>
<NetworkTables>
  <delay>100</delay>
  <filter_type_index>2</filter_type_index>
  <hostname>10.24.81.2</hostname>
  <port>1735</port>
  <prefix>/RoboRealm/</prefix>
  <variables_to_send>HOTTARGET</variables_to_send>
  <variable_type_index>0</variable_type_index>
</NetworkTables>
<function>
<function_name>Tab2</function_name>
<function_always_run>0</function_always_run>
</function>
